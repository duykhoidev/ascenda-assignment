const hotel_ids = ["H1", "H2"];
const destination_ids = ["D1", "D2", "D3"];

// Step 1: Apply flatMap on hotel_ids
const flatMapResult = hotel_ids.flatMap((hotel_id) => {
  console.log(`Step 1 - Processing hotel_id: ${hotel_id}`); // Logging the current hotel_id
  const mappedResult = destination_ids.map((destination_id) => {
    console.log(`  Processing destination_id: ${destination_id}`); // Logging each destination_id inside the map
    return {
      hotel_id,
      destination_id,
    };
  });
  console.log(`  Result after map for hotel_id ${hotel_id}:`, mappedResult); // Log the array generated by map
  return mappedResult; // Return the result of the map
});

console.log("Result after flatMap on hotel_ids:", flatMapResult); // Final result of flatMap

// Step 2: Apply map on hotel_ids
const mapResult = hotel_ids.map((hotel_id) => {
  console.log(`Step 2 - Processing hotel_id: ${hotel_id}`); // Logging the current hotel_id
  const mappedResult = destination_ids.map((destination_id) => {
    console.log(`  Processing destination_id: ${destination_id}`); // Logging each destination_id inside the map
    return {
      hotel_id,
      destination_id,
    };
  });
  console.log(`  Result after map for hotel_id ${hotel_id}:`, mappedResult); // Log the array generated by map
  return mappedResult; // Return the result of the inner map
});

console.log("Result after map on hotel_ids:", mapResult); // Final result of map

// Step 3: Flatten the result of map using .flat()
const flatResult = mapResult.flat(); // Flatten the array of arrays
console.log("Step 3 - Flattened result after map and flat:", flatResult);

const combinationKeyPairs = hotel_ids.flatMap((hotel_id) =>
  destination_ids.map((destination_id) => ({
    hotel_id: hotel_id,
    destination_id: destination_id,
  }))
);